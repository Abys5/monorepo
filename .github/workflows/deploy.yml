name: Publish kittr

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Find Changed files
      #   uses: tj-actions/changed-files@v13.1
      #   id: changed-files

      # - name: List all changed files
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #       echo "$file was changed"
      #     done

      # - name: Build and push api Docker Image
      #   # if: contains(steps.changed-files.outputs.all_changed_files, 'api')
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./api
      #     push: true
      #     tags: ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Build and push web Docker Image
        # if: contains(steps.changed-files.outputs.all_changed_files, 'web')
        uses: docker/build-push-action@v2
        with:
          context: ./front-end
          push: true
          tags: ghcr.io/${{github.repository}}/web:${{github.sha}}
          build-args: |
            ENVIRONMENT=${{secrets.ENVIRONMENT}}
            DB_CONNECTION_STRING=${{secrets.DB_CONNECTION_STRING}}
            NEXT_PUBLIC_GOOGLE_ANALYTICS=${{secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS}}
            NEXT_PUBLIC_API_KEY=${{secrets.NEXT_PUBLIC_API_KEY}}
            NEXT_PUBLIC_FIREBASE_DATABASE_URL=${{secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL}}
            NEXT_PUBLIC_ROLLBAR_ACCESS_TOKEN=${{secrets.NEXT_PUBLIC_ROLLBAR_ACCESS_TOKEN}}
            NEXT_PUBLIC_ROLLBAR_ENVIRONMENT=${{secrets.NEXT_PUBLIC_ROLLBAR_ENVIRONMENT}}
            FIREBASE_PROJECT_ID=${{secrets.FIREBASE_PROJECT_ID}}
            FIREBASE_AUTH_DOMAIN=${{secrets.FIREBASE_AUTH_DOMAIN}}
            FIREBASE_CLIENT_EMAIL=${{secrets.FIREBASE_CLIENT_EMAIL}}
            FIREBASE_MESSAGING_SENDER_ID=${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
            FIREBASE_APP_ID=${{secrets.FIREBASE_APP_ID}}
            FIREBASE_MEASUREMENT_ID=${{secrets.FIREBASE_MEASUREMENT_ID}}
            FIREBASE_COOKIE_SECRET_PREVIOUS=${{secrets.FIREBASE_COOKIE_SECRET_PREVIOUS}}
            FIREBASE_COOKIE_SECRET_CURRENT=${{secrets.FIREBASE_COOKIE_SECRET_CURRENT}}
            TWITCH_CLIENT_ID=${{secrets.TWITCH_CLIENT_ID}}
            TWITCH_SECRET=${{secrets.TWITCH_SECRET}}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}
            STRIPE_SECRET_KEY=${{secrets.STRIPE_SECRET_KEY}}
            STRIPE_WEBHOOK_SECRET=${{secrets.STRIPE_WEBHOOK_SECRET}}
            SUBSCRIPTION_PRICE_ID=${{secrets.SUBSCRIPTION_PRICE_ID}}
            MONTHLY_TIP_PRICE_ID=${{secrets.MONTHLY_TIP_PRICE_ID}}
            NEXT_PUBLIC_SOCKET_HOST=${{secrets.NEXT_PUBLIC_SOCKET_HOST}}
            GOOGLE_APPLICATION_CREDENTIALS=${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}

      # - name: Trigger api deployment to Digital Ocean
      #   # if: contains(steps.changed-files.outputs.all_changed_files, 'api')
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{secrets.DROPLET_HOST}}
      #     username: ${{secrets.DOKKU_SSH_USER}}
      #     key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
      #     script: |
      #       dokku git:from-image api ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Trigger web deployment to Digital Ocean
        # if: contains(steps.changed-files.outputs.all_changed_files, 'web')
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
          script: |
            dokku git:from-image web ghcr.io/${{github.repository}}/web:${{github.sha}}

      # Just could not get these to work.
      # - name: Delete old api images
      #   uses: actions/delete-package-versions@v2
      #   with:
      #     package-name: "api"
      #     token: ${{secrets.GITHUB_TOKEN}}
      #     min-versions-to-keep: 3

      # - name: Delete old web images
      #   uses: actions/delete-package-versions@v2
      #   with:
      #     package-name: "web"
      #     token: ${{secrets.GITHUB_TOKEN}}
      #     min-versions-to-keep: 3
